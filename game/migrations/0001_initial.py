# Generated by Django 4.1.7 on 2023-03-13 19:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='category')),
                ('is_active', models.BooleanField(verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='choice text')),
                ('chosen_count', models.PositiveIntegerField(default=0, verbose_name='chosen count')),
                ('is_correct', models.BooleanField(default=False, verbose_name='is correct')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starter_player_score', models.PositiveIntegerField(default=0, verbose_name='starter player score')),
                ('joining_player_score', models.PositiveIntegerField(default=0, verbose_name='joining player score')),
                ('status', models.CharField(choices=[('MM', 'matchmaking'), ('OG', 'ongoing'), ('F', 'finished')], max_length=15, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation time')),
                ('modified_at', models.DateTimeField(blank=True, null=True, verbose_name='last modification')),
                ('turn', models.CharField(choices=[('S', 'starter'), ('J', 'joiner')], default='S', max_length=10, verbose_name='turn')),
                ('expires_at', models.DateTimeField(verbose_name='expected expiring date')),
                ('rounds_played', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(6)], verbose_name='round_played')),
                ('joining_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='player_matches_as_joiner', to='accounts.player', verbose_name='joining player')),
                ('selected_categories', models.ManyToManyField(to='game.category', verbose_name='selected categories')),
                ('starter_player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='player_matches_as_starter', to='accounts.player', verbose_name='starter player')),
            ],
            options={
                'verbose_name': 'Match',
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='question text')),
                ('answered_count', models.PositiveIntegerField(default=0, verbose_name='answered count')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='creation date')),
                ('confirmed_at', models.DateField(blank=True, null=True, verbose_name='confirmation date')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='likes')),
                ('dislikes', models.PositiveIntegerField(default=0, verbose_name='dislikes')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='game.category', verbose_name='category')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='accounts.admin', verbose_name='confirmer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='accounts.player', verbose_name='creator')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='PlayerAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_answers', to='game.choice')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_answers', to='game.match', verbose_name='match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='player_answers', to='accounts.player', verbose_name='player')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_answers', to='game.question', verbose_name='question')),
            ],
            options={
                'verbose_name': 'Player Answer',
                'verbose_name_plural': 'Player Answers',
            },
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='game.question', verbose_name='question'),
        ),
    ]
